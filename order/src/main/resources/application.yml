spring:
  application:
    name: order-service

  datasource:
    url: jdbc:postgresql://localhost:5432/${POSTGRESQL_DB_NAME}
    username: ${POSTGRESQL_NAME}
    password: ${POSTGRESQL_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:19090/eureka/

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        minimumNumberOfCalls: 5
        slowCallRateThreshold: 100
        slowCallDurationThreshold: 60000
        failureRateThreshold: 50
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 20s
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration:
          seconds: 3
        ignore-exceptions:
          - feign.FeignException.BadRequest
    instances:
      userAndHubServiceRetry: # Retry 설정 이름
        base-config: default


service:
  jwt:
    access-expiration: 3600000
    secret-key: ${JWT_SECRET_KEY}
server:
  port: 19102

management:
  zipkin:
    tracing:
      endpoint: "http://localhost:9411/api/v2/spans"
  tracing:
    sampling:
      probability: 1.0

openapi:
  service:
    url : http://localhost:19091/order-service